doctype doctype html
html(lang="ru")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=798")
    title Document
  body
    script.
      const url = new URL(window.location);
      const data = url.searchParams.get('data');
      const json = JSON.parse(data);

      //TODO сделать правильную верстку html для email
      // https://zen.yandex.ru/media/id/5f5758dd75996c43cd2b9be6/instrukciia-po-html-verstke-pisem-email-rassylki-5f64b24c4c07ce06042d8b2c
      const makeOrderHTML = (data) => {
        const cargo = `
        <table>
          <caption>${data.cargo.name ? data.cargo.name : "Груз"}</caption>
          <thead>
            <tr>
              <th>Вес, кг</th>
              <th>Объем, м³</th>
              <th>Количество мест</th>
              <th>Температурный режим</th>
              <th>Объявленная стоимость, руб.</th>
              <th>Страховка</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>${data.cargo.weight}</td>
              <td>${data.cargo.volume}</td>
              <td>${data.cargo.qty}</td>
              <td>${data.cargo.condition}</td>
              <td>${data.cargo.value}</td>
              <td>${data.insurance ?? ""}</td>
            </tr>
          </tbody>
        </table>`;

        const counterAgent = Object.create(null);
        ["consigner", "consignee", "payer"].forEach((role) => {
          counterAgent[role] = ``;
          if (data[role].isPayer) {
            data.payer = data[role];
          }

          if (data[role].type === "legal-entity") {
            counterAgent[role] = `<table>
            <caption>${
              {
                consigner: "Грузоотправитель",
                consignee: "Грузополучатель",
                payer: "Плательщик"
              }[role]
            } ${data[role].name}</caption>
            <tbody>
              <tr>
                <th>ИНН</th>
                <th>КПП</th>
                <th>ОГРН</th>
                <th>Юридический адрес</th>
              </tr>
              <tr>
                <td>${data[role].INN}</td>
                <td>${data[role].KPP}</td>
                <td>${data[role].OGRN}</td>
                <td>${data[role].address}</td>
              </tr>
              ${
                role === "payer"
                  ? ``
                  : `<tr><th colspan="4">Контактное лицо по вопросам погрузки</th></tr>
                <tr><td colspan="4">${data[role].cargoContactFio} ${data[role].cargoContactTel}</td>`
              }
              </tr>
              ${
                data[role].isPayer
                  ? `
                <tr>
                  <th colspan="4">Контактное лицо по вопросам оплаты</th>
                </tr>
                <tr>
                  <td colspan="4">${data[role].payingContactFio} ${data[role].payingContactTel}</td>
                </tr>
              `
                  : ``
              }
            </tbody>
            </table>`;
          }
          if (data[role].type === "private-person") {
            counterAgent[role] = `<table>
            <caption>${
              {
                consigner: "Грузоотправитель",
                consignee: "Грузополучатель",
                payer: "Плательщик"
              }[role]
            } ${data[role].name} (${data[role].tel})</caption>
            </table>`;
          }
        });

        const operationObject = Object.create(null);
        ["loading", "unloading"].forEach((operation) => {
          operationObject[operation] = `
          <table>
            <caption>${
              {loading: "Сдача груза", unloading: "Получение груза"}[operation]
            }</caption>
            <thead>
              <tr>
                <th>Дата</th>
                <th>Время</th>
                <th>Город</th>
                <th>Способ</th>
                <th>Адрес</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>${data[operation].date}</td>
                <td>${data[operation].time}</td>
                <td>${data[operation].place}</td>
                <td>${data[operation].point}</td>
                <td>${data[operation].pointClientAddress}</td>
              </tr>
            </tbody>
          </table>
          `;
        });

        const html = `
        <style>
          .email {
            width: calc(210mm - 20mm);
            font-size: 12pt;
          }

          .email table {
            width: 100%;
            border-collapse: collapse;
          }

          .email table th {
            font-weight: normal;
          }

          .email table td {
            font-weight: bold;
            text-align: center;
          }

          .email table th,
          .email table td {
            padding: 2px;
            border: 1px solid lightgrey;
          }

          .email table>caption {
            font-weight: bold;
            font-size: large;
          }
        </style>
        <article class="email">
          <div style="font-size: large; border-bottom: 1px solid black;">
            <div style="float: left;">Заявка на грузоперевозку</div>
            <div style="float: right;">${
              ((timestamp = new Date()),
              timestamp.toLocaleDateString() + " " + timestamp.toLocaleTimeString())
            }</div>
            <div style="clear: both;"></div>
          </div>
          ${cargo}
          <hr>
          ${counterAgent.consigner}
          <hr>
          ${counterAgent.consignee}
          <hr>
          ${counterAgent.payer}
          <hr>
          <table>
            <thead>
              <tr>
                <td></td>
                <th>Сдача груза</th>
                <th>Получение груза</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <th>Дата</th>
                <td>${data.loading.date}</td>
                <td></td>
              </tr>
              <tr>
                <th>Время</th>
                <td>${data.loading.time}</td>
                <td></td>
              </tr>
              <tr>
                <th>Город</th>
                <td>${data.loading.place}</td>
                <td>${data.unloading.place}</td>
              </tr>
              <tr>
                <th>Способ</th>
                <td>${
                  {
                    "loading-point-terminal": "терминал",
                    "loading-point-client": "подача машины",
                    "loading-point-pickup": "забрать груз на трассе"
                  }[data.loading.point]
                }</td>
                <td>${
                  {
                    "unloading-point-terminal": "терминал",
                    "unloading-point-client": "подача машины",
                    "unloading-point-pickup": "передать груз на трассе"
                  }[data.unloading.point]
                }</td>
              </tr>
              <tr>
                <th>Адрес</th>
                <td>${
                  data.loading.point === "loading-point-terminal"
                    ? ""
                    : data.loading.pointClientAddress
                }</td>
                <td>${
                  data.unloading.point === "unloading-point-terminal"
                    ? ""
                    : data.unloading.pointClientAddress
                }</td>
              </tr>
            </tbody>
          </table>
          <hr>
          <p>Форма оплаты: <span style="font-weight: bold;">${
            data.paymentForm
          }</span></p>
          <hr>
          <p>Дополнительная информация: <span style="font-weight: bold;">${
            data.memo
          }</span></p>
          <hr>
          <p>Заявку составил:
            <span style="font-weight: bold;">${data.author.fio}</span>,
            тел
            <span style="font-weight: bold;">${data.author.tel}</span>,
            email
            <span style="font-weight: bold;">${data.author.email}</span></p>
        </article>`;

        return html;
      };

      document.body.innerHTML = makeOrderHTML(json);
